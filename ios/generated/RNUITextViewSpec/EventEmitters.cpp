
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include "EventEmitters.h"


namespace facebook::react {

void RNUITextViewChildEventEmitter::onPress(OnPress $event) const {
  dispatchEvent("press", [$event=std::move($event)](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    $payload.setProperty(runtime, "target", $event.target);
    return $payload;
  });
}


void RNUITextViewChildEventEmitter::onLongPress(OnLongPress $event) const {
  dispatchEvent("longPress", [$event=std::move($event)](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    $payload.setProperty(runtime, "target", $event.target);
    return $payload;
  });
}


void RNUITextViewEventEmitter::onTextLayout(OnTextLayout $event) const {
  dispatchEvent("textLayout", [$event=std::move($event)](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    $payload.setProperty(runtime, "target", $event.target);

    auto lines = jsi::Array(runtime, $event.lines.size());
    size_t linesIndex = 0;
    for (auto linesValue : $event.lines) {
      lines.setValueAtIndex(runtime, linesIndex++, linesValue);
    }
    $payload.setProperty(runtime, "lines", lines);
  
    return $payload;
  });
}

} // namespace facebook::react
